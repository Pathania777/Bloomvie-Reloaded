apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()

static def versionToNumber(major, minor, patch) {
    return patch * 100 + minor * 10000 + major * 1000000
}

def getRNVersion() {
    def version = providers.exec {
        workingDir(projectDir)
        commandLine("node", "-e", "console.log(require('react-native/package.json').version);")
    }.standardOutput.asText.get().trim()

    def coreVersion = version.split("-")[0]
    def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }

    return versionToNumber(major, minor, patch)
}

def rnVersion = getRNVersion()

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    entryFile = file(["node", "-e", "require('expo/scripts/resolveAppEntry')", projectRoot, "android", "absolute"].execute(null, rootDir).text.trim())
    reactNativeDir = new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()
    hermesCommand = new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + "/sdks/hermesc/%OS-BIN%/hermesc"
    codegenDir = new File(["node", "--print", "require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()

    cliFile = new File(["node", "--print", "require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })"].execute(null, rootDir).text.trim())
    bundleCommand = "export:embed"

    if (rnVersion >= versionToNumber(0, 75, 0)) {
        autolinkLibrariesWithApp()
    }
}

def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInReleaseBuilds') ?: false).toBoolean()

def jscFlavor = 'org.webkit:android-jsc:+'  // JSC flavor for your app

android {
    compileSdkVersion 34  // Ensure this is consistent with your gradle.properties settings.

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 34
        applicationId "com.example.app"
    }

    // Kotlin setup for Java 17 (if you're using Kotlin)
    kotlinOptions {
        jvmTarget = "17"  // Set Kotlin JVM target to Java 17
    }

    // Java toolchain configuration to ensure Gradle uses Java 17
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)  // Explicitly use Java 17 toolchain
        }
    }
}
14
buildscript {
    ext {
        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'
        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')
        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')
        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')
        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.23'
        ndkVersion = "26.1.10909125"
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        // Ensure you're using an appropriate version of the Android Gradle Plugin
        classpath('com.android.tools.build:gradle:7.6.0')  // Use a Gradle plugin that supports Java 17

        // React Native specific plugin
        classpath('com.facebook.react:react-native-gradle-plugin')

        // Kotlin plugin for Kotlin-based dependencies
        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion')  // Ensure you're using the correct Kotlin version
    }
}

apply plugin: "com.facebook.react.rootproject"

allprojects {
    repositories {
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url(new File(['node', '--print', "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim(), '../android'))
        }
        maven {
            // Android JSC is installed from npm
            url(new File(['node', '--print', "require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim(), '../dist'))
        }

        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
    }
}
